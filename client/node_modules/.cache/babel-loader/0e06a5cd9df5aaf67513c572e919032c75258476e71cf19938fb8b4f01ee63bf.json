{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabila\\\\Desktop\\\\aksaraku 2.0\\\\client\\\\src\\\\components\\\\Memory\\\\m1.js\",\n  _s = $RefreshSig$();\nimport ha from \"../../assets/image/aksara1/ha.png\";\nimport ra from \"../../assets/image/aksara1/ra.png\";\nimport sa from \"../../assets/image/aksara1/sa.png\";\nimport ya from \"../../assets/image/aksara1/ya.png\";\nimport ba from \"../../assets/image/aksara1/ba.png\";\nimport ja from \"../../assets/image/aksara1/ja.png\";\nimport cover1 from \"../../assets/image/Nglegena.png\";\nimport { useEffect, useState } from \"react\";\nimport \"../../style/memorycard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemoryGames1() {\n  _s();\n  const cardImage = [{\n    image: ha\n  }, {\n    image: ra\n  }, {\n    image: sa\n  }, {\n    image: ya\n  }, {\n    image: ba\n  }, {\n    image: ja\n  }];\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImage, ...cardImage].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n  const handleClick = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.image === choiceTwo.image) {\n        console.log(\"Kartu podo\");\n        resetTurn();\n      } else {\n        console.log(\"kartu ra podo\");\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"Atur Kartu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: \"card front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cover1,\n            onClick: handleClick,\n            alt: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryGames1, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n_c = MemoryGames1;\nexport default MemoryGames1;\nvar _c;\n$RefreshReg$(_c, \"MemoryGames1\");","map":{"version":3,"names":["ha","ra","sa","ya","ba","ja","cover1","useEffect","useState","jsxDEV","_jsxDEV","MemoryGames1","_s","cardImage","image","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","sort","Math","random","map","card","id","handleClick","console","log","resetTurn","prevTurns","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Nabila/Desktop/aksaraku 2.0/client/src/components/Memory/m1.js"],"sourcesContent":["import ha from \"../../assets/image/aksara1/ha.png\";\r\nimport ra from \"../../assets/image/aksara1/ra.png\";\r\nimport sa from \"../../assets/image/aksara1/sa.png\";\r\nimport ya from \"../../assets/image/aksara1/ya.png\";\r\nimport ba from \"../../assets/image/aksara1/ba.png\";\r\nimport ja from \"../../assets/image/aksara1/ja.png\";\r\nimport cover1 from \"../../assets/image/Nglegena.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../../style/memorycard.css\";\r\n\r\nfunction MemoryGames1() {\r\n  const cardImage = [\r\n    { image: ha },\r\n    { image: ra },\r\n    { image: sa },\r\n    { image: ya },\r\n    { image: ba },\r\n    { image: ja },\r\n  ];\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [choiceOne, setChoiceOne] = useState(null);\r\n  const [choiceTwo, setChoiceTwo] = useState(null);\r\n\r\n  const shuffleCards = () => {\r\n    const shuffleCards = [...cardImage, ...cardImage]\r\n      .sort(() => Math.random() - 0.5)\r\n      .map((card) => ({ ...card, id: Math.random }));\r\n\r\n    setCards(shuffleCards);\r\n    setTurns(0);\r\n  };\r\n  const handleClick = (card) => {\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\r\n  };\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      if (choiceOne.image === choiceTwo.image) {\r\n        console.log(\"Kartu podo\");\r\n        resetTurn();\r\n      } else {\r\n        console.log(\"kartu ra podo\");\r\n        resetTurn();\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo]);\r\n  const resetTurn = () => {\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n    setTurns((prevTurns) => prevTurns + 1);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Memory 1</h1>\r\n      <button onClick={shuffleCards}>Atur Kartu</button>\r\n\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <div className=\"card\" key={card.id}>\r\n            <div className=\"card-image\">\r\n              <img src={card.image} alt=\"card front\" />\r\n              <img src={cover1} onClick={handleClick} alt=\"cover\" />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGames1;\r\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,MAAM,MAAM,iCAAiC;AACpD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAEd;EAAG,CAAC,EACb;IAAEc,KAAK,EAAEb;EAAG,CAAC,EACb;IAAEa,KAAK,EAAEZ;EAAG,CAAC,EACb;IAAEY,KAAK,EAAEX;EAAG,CAAC,EACb;IAAEW,KAAK,EAAEV;EAAG,CAAC,EACb;IAAEU,KAAK,EAAET;EAAG,CAAC,CACd;EAED,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMA,YAAY,GAAG,CAAC,GAAGV,SAAS,EAAE,GAAGA,SAAS,CAAC,CAC9CW,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC;IAAO,CAAC,CAAC,CAAC;IAEhDV,QAAQ,CAACO,YAAY,CAAC;IACtBL,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EACD,MAAMY,WAAW,GAAIF,IAAI,IAAK;IAC5BT,SAAS,GAAGG,YAAY,CAACM,IAAI,CAAC,GAAGR,YAAY,CAACQ,IAAI,CAAC;EACrD,CAAC;EACDrB,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,IAAIE,SAAS,EAAE;MAC1B,IAAIF,SAAS,CAACL,KAAK,KAAKO,SAAS,CAACP,KAAK,EAAE;QACvCiB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;QACzBC,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACLF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5BC,SAAS,CAAC,CAAC;MACb;IACF;EACF,CAAC,EAAE,CAACd,SAAS,EAAEE,SAAS,CAAC,CAAC;EAC1B,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBb,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC,IAAI,CAAC;IAClBJ,QAAQ,CAAEgB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;EACD,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB7B,OAAA;MAAQ8B,OAAO,EAAEjB,YAAa;MAAAY,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElD7B,OAAA;MAAK+B,SAAS,EAAC,WAAW;MAAAN,QAAA,EACvBpB,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdlB,OAAA;QAAK+B,SAAS,EAAC,MAAM;QAAAN,QAAA,eACnBzB,OAAA;UAAK+B,SAAS,EAAC,YAAY;UAAAN,QAAA,gBACzBzB,OAAA;YAAKgC,GAAG,EAAEd,IAAI,CAACd,KAAM;YAAC6B,GAAG,EAAC;UAAY;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzC7B,OAAA;YAAKgC,GAAG,EAAEpC,MAAO;YAACkC,OAAO,EAAEV,WAAY;YAACa,GAAG,EAAC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MAAC,GAJmBX,IAAI,CAACC,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAK7B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CA3DQD,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA6DrB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}