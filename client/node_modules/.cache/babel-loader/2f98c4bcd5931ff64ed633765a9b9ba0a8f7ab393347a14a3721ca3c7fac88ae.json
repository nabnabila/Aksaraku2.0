{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabila\\\\Desktop\\\\aksaraku2.0\\\\client\\\\src\\\\components\\\\Swara\\\\s1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport pg from \"../../assets/audio/kuis/pagelaranwayang.mp3\";\nimport pg1 from \"../../assets/image/kuis/pg1.png\";\nimport pg2 from \"../../assets/image/kuis/pg2.png\";\nimport pg3 from \"../../assets/image/kuis/pg3.png\";\nimport pg4 from \"../../assets/image/kuis/pg4.png\";\nimport \"../../style/ImageMatch.css\"; // Make sure this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\nconst Swara = ({\n  nextPagePath\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const originalSong = [{\n    audioSrc: pg,\n    correctAnswer: \"option4\",\n    options: [{\n      id: \"option1\",\n      imgSrc: pg2\n    }, {\n      id: \"option2\",\n      imgSrc: pg3\n    }, {\n      id: \"option3\",\n      imgSrc: pg4\n    }, {\n      id: \"option4\",\n      imgSrc: pg1\n    }]\n  }];\n  const [shuffledSong, setShuffledSong] = useState(originalSong.map(song => ({\n    options: shuffleArray([...song.options])\n  })));\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\n  const [score, setScore] = useState(0);\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const playAudio = () => {\n    const audio = new Audio(originalSong[0].audioSrc);\n    audio.play();\n    setIsPlaying(true);\n    audio.onended = () => {\n      setIsPlaying(false);\n    };\n  };\n  const handleChoiceClick = optionId => {\n    if (selectedAnswer) return; // Prevent clicking after an answer is selected\n\n    setSelectedAnswer(optionId);\n    if (optionId === originalSong[0].correctAnswer) {\n      setIsAnswerCorrect(true);\n      setScore(prev => prev + 1); // Increment score\n    } else {\n      setIsAnswerCorrect(false);\n    }\n    setIsPopupVisible(true); // Show popup after selection\n  };\n  const handlePopupAction = () => {\n    setIsPopupVisible(false);\n    navigate(nextPagePath);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sound-match-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nyocokake Swara 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-button\",\n        onClick: playAudio,\n        disabled: isPlaying,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"play-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-options\",\n      children: shuffledSong[0].options.map(option => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: option.imgSrc,\n        alt: `Option ${option.id}`,\n        onClick: () => handleChoiceClick(option.id),\n        className: `image-option ${selectedAnswer === option.id ? \"selected\" : \"\"}`\n      }, option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), isAnswerCorrect !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `feedback-message ${isAnswerCorrect ? \"\" : \"incorrect\"}`,\n      children: isAnswerCorrect ? \"Bener!\" : \"Coba Maneh Yok!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Nilai: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isAnswerCorrect ? \"Kerja Bagus!\" : \"Coba Maneh Yok!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePopupAction,\n        children: \"Lanjutkan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Swara, \"NddQfVEIC8vxsJp/C6G0KenCqOE=\", false, function () {\n  return [useNavigate];\n});\n_c = Swara;\nexport default Swara;\nvar _c;\n$RefreshReg$(_c, \"Swara\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","pg","pg1","pg2","pg3","pg4","jsxDEV","_jsxDEV","shuffleArray","array","i","length","j","Math","floor","random","Swara","nextPagePath","_s","navigate","originalSong","audioSrc","correctAnswer","options","id","imgSrc","shuffledSong","setShuffledSong","map","song","isPlaying","setIsPlaying","selectedAnswer","setSelectedAnswer","isAnswerCorrect","setIsAnswerCorrect","score","setScore","isPopupVisible","setIsPopupVisible","playAudio","audio","Audio","play","onended","handleChoiceClick","optionId","prev","handlePopupAction","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","option","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Nabila/Desktop/aksaraku2.0/client/src/components/Swara/s1.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport pg from \"../../assets/audio/kuis/pagelaranwayang.mp3\";\r\nimport pg1 from \"../../assets/image/kuis/pg1.png\";\r\nimport pg2 from \"../../assets/image/kuis/pg2.png\";\r\nimport pg3 from \"../../assets/image/kuis/pg3.png\";\r\nimport pg4 from \"../../assets/image/kuis/pg4.png\";\r\nimport \"../../style/ImageMatch.css\"; // Make sure this path is correct\r\n\r\nconst shuffleArray = (array) => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n  return array;\r\n};\r\n\r\nconst Swara = ({ nextPagePath }) => {\r\n  const navigate = useNavigate();\r\n  const originalSong = [\r\n    {\r\n      audioSrc: pg,\r\n      correctAnswer: \"option4\",\r\n      options: [\r\n        { id: \"option1\", imgSrc: pg2 },\r\n        { id: \"option2\", imgSrc: pg3 },\r\n        { id: \"option3\", imgSrc: pg4 },\r\n        { id: \"option4\", imgSrc: pg1 },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [shuffledSong, setShuffledSong] = useState(\r\n    originalSong.map((song) => ({\r\n      options: shuffleArray([...song.options]),\r\n    }))\r\n  );\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n\r\n  const playAudio = () => {\r\n    const audio = new Audio(originalSong[0].audioSrc);\r\n    audio.play();\r\n    setIsPlaying(true);\r\n    audio.onended = () => {\r\n      setIsPlaying(false);\r\n    };\r\n  };\r\n\r\n  const handleChoiceClick = (optionId) => {\r\n    if (selectedAnswer) return; // Prevent clicking after an answer is selected\r\n\r\n    setSelectedAnswer(optionId);\r\n    if (optionId === originalSong[0].correctAnswer) {\r\n      setIsAnswerCorrect(true);\r\n      setScore((prev) => prev + 1); // Increment score\r\n    } else {\r\n      setIsAnswerCorrect(false);\r\n    }\r\n    setIsPopupVisible(true); // Show popup after selection\r\n  };\r\n\r\n  const handlePopupAction = () => {\r\n    setIsPopupVisible(false);\r\n    navigate(nextPagePath);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sound-match-game\">\r\n      <h1>Nyocokake Swara 1</h1>\r\n      <div className=\"play-button-container\">\r\n        <button\r\n          className=\"play-button\"\r\n          onClick={playAudio}\r\n          disabled={isPlaying}\r\n        >\r\n          <i className=\"play-icon\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"image-options\">\r\n        {shuffledSong[0].options.map((option) => (\r\n          <img\r\n            key={option.id}\r\n            src={option.imgSrc}\r\n            alt={`Option ${option.id}`}\r\n            onClick={() => handleChoiceClick(option.id)}\r\n            className={`image-option ${\r\n              selectedAnswer === option.id ? \"selected\" : \"\"\r\n            }`}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {isAnswerCorrect !== null && (\r\n        <p className={`feedback-message ${isAnswerCorrect ? \"\" : \"incorrect\"}`}>\r\n          {isAnswerCorrect ? \"Bener!\" : \"Coba Maneh Yok!\"}\r\n        </p>\r\n      )}\r\n\r\n      {isPopupVisible && (\r\n        <div className=\"popup\">\r\n          <h2>Nilai: {score}</h2>\r\n          <p>{isAnswerCorrect ? \"Kerja Bagus!\" : \"Coba Maneh Yok!\"}</p>\r\n          <button onClick={handlePopupAction}>Lanjutkan</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Swara;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}