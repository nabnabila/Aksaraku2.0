{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabila\\\\Desktop\\\\aksaraku 2.0\\\\client\\\\src\\\\components\\\\Memory\\\\m4.js\",\n  _s = $RefreshSig$();\nimport ka from \"../../assets/image/aksara3/ka.png\";\nimport na from \"../../assets/image/aksara3/na.png\";\nimport sa from \"../../assets/image/aksara3/sa.png\";\nimport nya from \"../../assets/image/aksara3/nya.png\";\nimport ta from \"../../assets/image/aksara3/ta.png\";\nimport pa from \"../../assets/image/aksara3/pa.png\";\nimport cover1 from \"../../assets/image/Nglegena.png\";\nimport { useEffect, useState } from \"react\";\nimport \"../../style/memorycard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemoryGames4() {\n  _s();\n  const cardImage = [{\n    image: ka\n  }, {\n    image: na\n  }, {\n    image: sa\n  }, {\n    image: nya\n  }, {\n    image: ta\n  }, {\n    image: pa\n  }];\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImage, ...cardImage].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n    setFlippedCards([]);\n  };\n  const handleClick = card => {\n    if (flippedCards.includes(card.id) || choiceTwo) return;\n    if (choiceOne) {\n      setChoiceTwo(card);\n      setFlippedCards(prev => [...prev, card.id]);\n    } else {\n      setChoiceOne(card);\n      setFlippedCards(prev => [...prev, card.id]);\n    }\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.image === choiceTwo.image) {\n        resetTurn();\n      } else {\n        setTimeout(() => {\n          setFlippedCards(prev => prev.filter(id => id !== choiceOne.id && id !== choiceTwo.id));\n          resetTurn();\n        }, 1000); //\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"card-title\",\n      children: \"Memory 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card-click-button\",\n      onClick: shuffleCards,\n      children: \"Atur Kartu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: flippedCards.includes(card.id) ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: \"card front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cover1,\n            onClick: () => handleClick(card),\n            alt: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryGames4, \"97D38kZFk7TmMLSuyC+qlsbKDxk=\");\n_c = MemoryGames4;\nexport default MemoryGames4;\nvar _c;\n$RefreshReg$(_c, \"MemoryGames4\");","map":{"version":3,"names":["ka","na","sa","nya","ta","pa","cover1","useEffect","useState","jsxDEV","_jsxDEV","MemoryGames4","_s","cardImage","image","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","flippedCards","setFlippedCards","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleClick","includes","prev","resetTurn","setTimeout","filter","prevTurns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Nabila/Desktop/aksaraku 2.0/client/src/components/Memory/m4.js"],"sourcesContent":["import ka from \"../../assets/image/aksara3/ka.png\";\r\nimport na from \"../../assets/image/aksara3/na.png\";\r\nimport sa from \"../../assets/image/aksara3/sa.png\";\r\nimport nya from \"../../assets/image/aksara3/nya.png\";\r\nimport ta from \"../../assets/image/aksara3/ta.png\";\r\nimport pa from \"../../assets/image/aksara3/pa.png\";\r\nimport cover1 from \"../../assets/image/Nglegena.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"../../style/memorycard.css\";\r\n\r\nfunction MemoryGames4() {\r\n  const cardImage = [\r\n    { image: ka },\r\n    { image: na },\r\n    { image: sa },\r\n    { image: nya },\r\n    { image: ta },\r\n    { image: pa },\r\n  ];\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n  const [choiceOne, setChoiceOne] = useState(null);\r\n  const [choiceTwo, setChoiceTwo] = useState(null);\r\n  const [flippedCards, setFlippedCards] = useState([]);\r\n\r\n  const shuffleCards = () => {\r\n    const shuffledCards = [...cardImage, ...cardImage]\r\n      .sort(() => Math.random() - 0.5)\r\n      .map((card) => ({ ...card, id: Math.random() }));\r\n\r\n    setCards(shuffledCards);\r\n    setTurns(0);\r\n    setFlippedCards([]);\r\n  };\r\n\r\n  const handleClick = (card) => {\r\n    if (flippedCards.includes(card.id) || choiceTwo) return;\r\n    if (choiceOne) {\r\n      setChoiceTwo(card);\r\n      setFlippedCards((prev) => [...prev, card.id]);\r\n    } else {\r\n      setChoiceOne(card);\r\n      setFlippedCards((prev) => [...prev, card.id]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (choiceOne && choiceTwo) {\r\n      if (choiceOne.image === choiceTwo.image) {\r\n        resetTurn();\r\n      } else {\r\n        setTimeout(() => {\r\n          setFlippedCards((prev) =>\r\n            prev.filter((id) => id !== choiceOne.id && id !== choiceTwo.id)\r\n          );\r\n          resetTurn();\r\n        }, 1000); //\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo]);\r\n\r\n  const resetTurn = () => {\r\n    setChoiceOne(null);\r\n    setChoiceTwo(null);\r\n    setTurns((prevTurns) => prevTurns + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-header\">\r\n      <h1 className=\"card-title\">Memory 4</h1>\r\n      <button className=\"card-click-button\" onClick={shuffleCards}>\r\n        Atur Kartu\r\n      </button>\r\n\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <div className=\"card\" key={card.id}>\r\n            <div className=\"card-image\">\r\n              {flippedCards.includes(card.id) ? (\r\n                <img src={card.image} alt=\"card front\" />\r\n              ) : (\r\n                <img\r\n                  src={cover1}\r\n                  onClick={() => handleClick(card)}\r\n                  alt=\"cover\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGames4;\r\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,GAAG,MAAM,oCAAoC;AACpD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,MAAM,MAAM,iCAAiC;AACpD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAEd;EAAG,CAAC,EACb;IAAEc,KAAK,EAAEb;EAAG,CAAC,EACb;IAAEa,KAAK,EAAEZ;EAAG,CAAC,EACb;IAAEY,KAAK,EAAEX;EAAI,CAAC,EACd;IAAEW,KAAK,EAAEV;EAAG,CAAC,EACb;IAAEU,KAAK,EAAET;EAAG,CAAC,CACd;EAED,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMiB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,aAAa,GAAG,CAAC,GAAGb,SAAS,EAAE,GAAGA,SAAS,CAAC,CAC/Cc,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAAC,CAAC;IAElDb,QAAQ,CAACU,aAAa,CAAC;IACvBR,QAAQ,CAAC,CAAC,CAAC;IACXM,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMS,WAAW,GAAIF,IAAI,IAAK;IAC5B,IAAIR,YAAY,CAACW,QAAQ,CAACH,IAAI,CAACC,EAAE,CAAC,IAAIX,SAAS,EAAE;IACjD,IAAIF,SAAS,EAAE;MACbG,YAAY,CAACS,IAAI,CAAC;MAClBP,eAAe,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,IAAI,CAACC,EAAE,CAAC,CAAC;IAC/C,CAAC,MAAM;MACLZ,YAAY,CAACW,IAAI,CAAC;MAClBP,eAAe,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEJ,IAAI,CAACC,EAAE,CAAC,CAAC;IAC/C;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,IAAIE,SAAS,EAAE;MAC1B,IAAIF,SAAS,CAACL,KAAK,KAAKO,SAAS,CAACP,KAAK,EAAE;QACvCsB,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACLC,UAAU,CAAC,MAAM;UACfb,eAAe,CAAEW,IAAI,IACnBA,IAAI,CAACG,MAAM,CAAEN,EAAE,IAAKA,EAAE,KAAKb,SAAS,CAACa,EAAE,IAAIA,EAAE,KAAKX,SAAS,CAACW,EAAE,CAChE,CAAC;UACDI,SAAS,CAAC,CAAC;QACb,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;IACF;EACF,CAAC,EAAE,CAACjB,SAAS,EAAEE,SAAS,CAAC,CAAC;EAE1B,MAAMe,SAAS,GAAGA,CAAA,KAAM;IACtBhB,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC,IAAI,CAAC;IAClBJ,QAAQ,CAAEqB,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B/B,OAAA;MAAI8B,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCnC,OAAA;MAAQ8B,SAAS,EAAC,mBAAmB;MAACM,OAAO,EAAErB,YAAa;MAAAgB,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETnC,OAAA;MAAK8B,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvB1B,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdrB,OAAA;QAAK8B,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnB/B,OAAA;UAAK8B,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBlB,YAAY,CAACW,QAAQ,CAACH,IAAI,CAACC,EAAE,CAAC,gBAC7BtB,OAAA;YAAKqC,GAAG,EAAEhB,IAAI,CAACjB,KAAM;YAACkC,GAAG,EAAC;UAAY;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAEzCnC,OAAA;YACEqC,GAAG,EAAEzC,MAAO;YACZwC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACF,IAAI,CAAE;YACjCiB,GAAG,EAAC;UAAO;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC,GAXmBd,IAAI,CAACC,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAY7B,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CApFQD,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAsFrB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}