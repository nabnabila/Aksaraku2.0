{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nabila\\\\Desktop\\\\aksaraku 2.0\\\\client\\\\src\\\\components\\\\Memory\\\\m1.js\",\n  _s = $RefreshSig$();\nimport ha from \"../../assets/image/aksara1/ha.png\";\nimport ra from \"../../assets/image/aksara1/ra.png\";\nimport sa from \"../../assets/image/aksara1/sa.png\";\nimport ya from \"../../assets/image/aksara1/ya.png\";\nimport ba from \"../../assets/image/aksara1/ba.png\";\nimport ja from \"../../assets/image/aksara1/ja.png\";\nimport cover1 from \"../../assets/image/Nglegena.png\";\nimport { useState } from \"react\";\nimport \"../../style/memorycard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemoryGames1() {\n  _s();\n  const cardImage = [{\n    image: ha\n  }, {\n    image: ra\n  }, {\n    image: sa\n  }, {\n    image: ya\n  }, {\n    image: ba\n  }];\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImage, ...cardImage].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"Atur Kartu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: \"card front\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: cover1,\n            alt: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(MemoryGames1, \"DgXGRJOMO6ABd1pIeltbGt1J/vc=\");\n_c = MemoryGames1;\nexport default MemoryGames1;\nvar _c;\n$RefreshReg$(_c, \"MemoryGames1\");","map":{"version":3,"names":["ha","ra","sa","ya","ba","ja","cover1","useState","jsxDEV","_jsxDEV","MemoryGames1","_s","cardImage","image","cards","setCards","turns","setTurns","shuffleCards","sort","Math","random","map","card","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Nabila/Desktop/aksaraku 2.0/client/src/components/Memory/m1.js"],"sourcesContent":["import ha from \"../../assets/image/aksara1/ha.png\";\r\nimport ra from \"../../assets/image/aksara1/ra.png\";\r\nimport sa from \"../../assets/image/aksara1/sa.png\";\r\nimport ya from \"../../assets/image/aksara1/ya.png\";\r\nimport ba from \"../../assets/image/aksara1/ba.png\";\r\nimport ja from \"../../assets/image/aksara1/ja.png\";\r\nimport cover1 from \"../../assets/image/Nglegena.png\";\r\nimport { useState } from \"react\";\r\nimport \"../../style/memorycard.css\";\r\n\r\nfunction MemoryGames1() {\r\n  const cardImage = [\r\n    { image: ha },\r\n    { image: ra },\r\n    { image: sa },\r\n    { image: ya },\r\n    { image: ba },\r\n  ];\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [turns, setTurns] = useState(0);\r\n\r\n  const shuffleCards = () => {\r\n    const shuffleCards = [...cardImage, ...cardImage]\r\n      .sort(() => Math.random() - 0.5)\r\n      .map((card) => ({ ...card, id: Math.random }));\r\n\r\n    setCards(shuffleCards);\r\n    setTurns(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Memory 1</h1>\r\n      <button onClick={shuffleCards}>Atur Kartu</button>\r\n\r\n      <div className=\"card-grid\">\r\n        {cards.map((card) => (\r\n          <div key={card.id}>\r\n            <div>\r\n              <img src={card.image} alt=\"card front\" />\r\n              <img src={cover1} alt=\"cover\" />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemoryGames1;\r\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,EAAE,MAAM,mCAAmC;AAClD,OAAOC,MAAM,MAAM,iCAAiC;AACpD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAG,CAChB;IAAEC,KAAK,EAAEb;EAAG,CAAC,EACb;IAAEa,KAAK,EAAEZ;EAAG,CAAC,EACb;IAAEY,KAAK,EAAEX;EAAG,CAAC,EACb;IAAEW,KAAK,EAAEV;EAAG,CAAC,EACb;IAAEU,KAAK,EAAET;EAAG,CAAC,CACd;EAED,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMA,YAAY,GAAG,CAAC,GAAGN,SAAS,EAAE,GAAGA,SAAS,CAAC,CAC9CO,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAC/BC,GAAG,CAAEC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEC,EAAE,EAAEJ,IAAI,CAACC;IAAO,CAAC,CAAC,CAAC;IAEhDN,QAAQ,CAACG,YAAY,CAAC;IACtBD,QAAQ,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAQqB,OAAO,EAAEZ,YAAa;MAAAO,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElDpB,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAN,QAAA,EACvBX,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACdd,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YAAKuB,GAAG,EAAET,IAAI,CAACV,KAAM;YAACoB,GAAG,EAAC;UAAY;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzCpB,OAAA;YAAKuB,GAAG,EAAE1B,MAAO;YAAC2B,GAAG,EAAC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC,GAJEN,IAAI,CAACC,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAtCQD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}